name: Update Google Auth Redirect URI on PR

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  update-redirect-uri:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Vercel Preview URL
        id: vercel_preview_url
        uses: zentered/vercel-preview-url@v1.4.0
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          vercel_project_id: ${{ secrets.VERCEL_PROJECT_NAME }} # Optional but recommended: add your Vercel project ID (starts with prj_)

      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Update Google OAuth Client Redirect URIs'
        run: |
          set -e
          PROJECT_NUMBER="${{ secrets.GCP_PROJECT_NUMBER }}"
          CLIENT_ID="${{ secrets.GCP_OAUTH_CLIENT_ID }}"
          PREVIEW_URL="${{ steps.vercel_preview_url.outputs.preview_url }}"

          if [[ -z "$PREVIEW_URL" ]]; then
            echo "Failed to get Vercel preview URL. Skipping update."
            exit 0 # Exit successfully to not block PR
          fi

          if [[ -z "$PROJECT_NUMBER" ]]; then
            echo "Error: GCP_PROJECT_NUMBER secret is not set. Please set it in repository secrets."
            exit 1
          fi

          if [[ -z "$CLIENT_ID" ]]; then
            echo "Error: GCP_OAUTH_CLIENT_ID secret is not set. Please set it in repository secrets."
            exit 1
          fi

          # Construct the full resource name for the OAuth client.
          FULL_CLIENT_NAME="projects/${PROJECT_NUMBER}/brands/${PROJECT_NUMBER}/oauthClients/${CLIENT_ID}"

          echo "Project Number: $PROJECT_NUMBER"
          echo "Client ID: $CLIENT_ID"
          echo "Full Client Name: $FULL_CLIENT_NAME"

          # The URL from the action includes 'https://'
          NEW_REDIRECT_URI="${PREVIEW_URL}/api/auth/callback/google"

          echo "Fetching existing redirect URIs for client $FULL_CLIENT_NAME..."

          CLIENT_JSON=$(gcloud iap oauth-clients describe "$FULL_CLIENT_NAME" --format="json" --verbosity=debug)
          EXISTING_URIS_ARRAY=$(echo "$CLIENT_JSON" | jq -c '.redirectUris // []')

          echo "Existing URIs: $EXISTING_URIS_ARRAY"

          UPDATED_URIS_ARRAY=$(echo "$EXISTING_URIS_ARRAY" | jq -c --arg uri "$NEW_REDIRECT_URI" '(. + [$uri]) | unique')
          UPDATED_URIS_STRING=$(echo "$UPDATED_URIS_ARRAY" | jq -r '.[]' | paste -sd "," -)

          echo "New redirect URI to add: $NEW_REDIRECT_URI"
          echo "Updating OAuth client with new list of URIs..."

          gcloud iap oauth-clients update "$FULL_CLIENT_NAME" --redirect-uris="$UPDATED_URIS_STRING"

          echo "Successfully updated redirect URIs."
