name: Deploy to Vercel

on:
  push:
    branches: ["main", "dev"] # Production deployments for main branch, dev deployments for dev branch
  pull_request: # Preview deployments for PRs

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.x

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: |
          if [[ "${{ github.event_name }}" == 'pull_request' ]]; then
            vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          elif [[ "${{ github.ref }}" == 'refs/heads/dev' ]]; then
            vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          fi

      # Build the project using VERCEL_URL
      - name: Build Project Artifacts
        run: |
          # Create a .env file for the build
          # We use environment variables from vercel pull command 
          # This already includes VERCEL_URL which is available at build time
          echo "NEXTAUTH_URL=https://\${VERCEL_URL}" >> .vercel/.env.preview.local 
          echo "NEXTAUTH_URL=https://\${VERCEL_URL}" >> .vercel/.env.production.local

          if [[ "${{ github.event_name }}" == 'pull_request' ]]; then
            vercel build --token=${{ secrets.VERCEL_TOKEN }}
          elif [[ "${{ github.ref }}" == 'refs/heads/dev' ]]; then
            vercel build --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel build --yes --prod --token=${{ secrets.VERCEL_TOKEN }}
          fi

      # Deploy the project with VERCEL_URL
      - name: Deploy Project to Vercel
        id: deploy
        run: |
          if [[ "${{ github.event_name }}" == 'pull_request' ]]; then
            # For preview deployments
            DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --env NEXTAUTH_URL=https://\$VERCEL_URL)
            echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == 'refs/heads/dev' ]]; then
            # For dev deployments
            DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --env NEXTAUTH_URL=https://\$VERCEL_URL)
            echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          else
            # For production deployments
            DEPLOYMENT_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} --env NEXTAUTH_URL=https://\$VERCEL_URL)
            echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            const deployment_url = '${{ steps.deploy.outputs.deployment_url }}';
            github.rest.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `âœ… Preview deployment is ready! \n\nðŸ”— [View Preview](${deployment_url})`
            });
